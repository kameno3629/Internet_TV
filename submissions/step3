

## データベース操作の回答

https://www.notion.so/STEP3-ff9d477050d04d10a51ac78719b5a7f1?pvs=4


Notionが見れなかったときの為、以下に同じものを貼っておきます






======================================

### １問目

よく見られているエピソードを知りたいです。エピソード視聴数トップ3のエピソードタイトルと視聴数を取得してください

＜入力＞

```sql
-- エピソード視聴数トップ3のエピソードタイトルと視聴数を取得するクエリ
SELECT 
    Episode.Episode_name, 
    SUM(View_count.View_count) AS total_views
FROM 
    Episode
-- 番組枠テーブルとエピソードテーブルを結合
JOIN 
    Program_slot ON Episode.Episode_ID = Program_slot.Episode_ID
-- 視聴数テーブルと番組枠テーブルを結合
JOIN 
    View_count ON Program_slot.Program_slot_ID = View_count.Program_slot_ID
-- エピソードごとに視聴数を集計
GROUP BY 
    Episode.Episode_ID, Episode.Episode_name
-- 視聴数の多い順に並べ替え
ORDER BY 
    total_views DESC
-- 上位3件を取得
LIMIT 3;
```

＜出力＞

```sql
+--------------+-------------+
| Episode_name | total_views |
+--------------+-------------+
| 第2話        |        2500 |
| 第1話        |        2500 |
| 第3話        |        2400 |
+--------------+-------------+
3 rows in set (0.00 sec)
```

---

### ２問目

よく見られているエピソードの番組情報やシーズン情報も合わせて知りたいです。エピソード視聴数トップ3の番組タイトル、シーズン数、エピソード数、エピソードタイトル、視聴数を取得してください

＜入力＞

```sql
-- エピソード視聴数トップ3のエピソードタイトル、視聴数、番組タイトル、シーズン番号、エピソード番号を取得するクエリ
SELECT 
    Program.Program_name, 
    Season.Season_Number, 
    Episode.Episode_Number, 
    Episode.Episode_name, 
    SUM(View_count.View_count) AS total_views
FROM 
    Episode
-- 番組テーブルとエピソードテーブルを結合
JOIN 
    Program ON Episode.Program_ID = Program.Program_ID
-- シーズンテーブルとエピソードテーブルを結合
JOIN 
    Season ON Episode.Season_ID = Season.Season_ID
-- 番組枠テーブルとエピソードテーブルを結合
JOIN 
    Program_slot ON Episode.Episode_ID = Program_slot.Episode_ID
-- 視聴数テーブルと番組枠テーブルを結合
JOIN 
    View_count ON Program_slot.Program_slot_ID = View_count.Program_slot_ID
-- エピソードごとに視聴数を集計
GROUP BY 
    Program.Program_name, 
    Season.Season_Number, 
    Episode.Episode_Number, 
    Episode.Episode_name
-- 視聴数の多い順に並べ替え
ORDER BY 
    total_views DESC
-- 上位3件を取得
LIMIT 3;
```

＜出力＞

```sql
+--------------+---------------+----------------+--------------+-------------+
| Program_name | Season_Number | Episode_Number | Episode_name | total_views |
+--------------+---------------+----------------+--------------+-------------+
| 半沢直樹     |             1 |              1 | 第1話        |        2500 |
| 野球         |             1 |              2 | 第2話        |        2500 |
| サッカー     |             1 |              3 | 第3話        |        2400 |
+--------------+---------------+----------------+--------------+-------------+
3 rows in set (0.01 sec)
```

---

### ３問目

本日の番組表を表示するために、本日、どのチャンネルの、何時から、何の番組が放送されるのかを知りたいです。本日放送される全ての番組に対して、チャンネル名、放送開始時刻(日付+時間)、放送終了時刻、シーズン数、エピソード数、エピソードタイトル、エピソード詳細を取得してください。なお、番組の開始時刻が本日のものを本日放送される番組とみなすものとします
**ここでの本日は、'2023-10-01'とします。**
(この問題、なんの番組が放送されるのかを知りたいと言っているのに、取得する情報に番組名は含まれていません。今回は取得する情報のリストを優先します。

＜入力＞

```sql
-- 仮定した日付を使用して本日放送される全ての番組の情報を取得するクエリ
SELECT 
    Channel.Channel_name, 
    Program_slot.start_time, 
    Program_slot.ending_time, 
    Season.Season_Number, 
    Episode.Episode_Number, 
    Episode.Episode_name, 
    Episode.Episode_details
FROM 
    Program_slot
-- チャンネルテーブルと番組枠テーブルを結合
JOIN 
    Channel ON Program_slot.Channel_ID = Channel.Channel_ID
-- エピソードテーブルと番組枠テーブルを結合
JOIN 
    Episode ON Program_slot.Episode_ID = Episode.Episode_ID
-- シーズンテーブルとエピソードテーブルを結合
JOIN 
    Season ON Episode.Season_ID = Season.Season_ID
-- 仮定した日付で放送される番組をフィルタリング
WHERE 
    DATE(Program_slot.start_time) = '2023-10-01'
ORDER BY 
    Program_slot.start_time;
```

＜出力＞

```sql
+--------------+---------------------+---------------------+---------------+----------------+--------------+------------------+
| Channel_name | start_time          | ending_time         | Season_Number | Episode_Number | Episode_name | Episode_details  |
+--------------+---------------------+---------------------+---------------+----------------+--------------+------------------+
| ドラマ       | 2023-10-01 20:00:00 | 2023-10-01 20:24:00 |             1 |              1 | 第1話        | 第1話の詳細      |
| アニメ       | 2023-10-01 21:00:00 | 2023-10-01 21:24:00 |             1 |              1 | 第1話        | 第1話の詳細      |
| スポーツ     | 2023-10-01 22:00:00 | 2023-10-01 22:24:00 |             1 |              1 | 第1話        | 第1話の詳細      |
+--------------+---------------------+---------------------+---------------+----------------+--------------+------------------+
3 rows in set (0.01 sec)
```

---

### ４問目

ドラマというチャンネルがあったとして、ドラマのチャンネルの番組表を表示するために、本日から一週間分、何日の何時から何の番組が放送されるのかを知りたいです。ドラマのチャンネルに対して、放送開始時刻、放送終了時刻、シーズン数、エピソード数、エピソードタイトル、エピソード詳細を本日から一週間分取得してください
**ここでの本日は、'2023-09-27'とします**

＜入力＞

```sql
-- ドラマチャンネルの本日から一週間分の番組情報を取得するクエリ
SELECT 
    Program_slot.start_time, 
    Program_slot.ending_time, 
    Season.Season_Number, 
    Episode.Episode_Number, 
    Episode.Episode_name, 
    Episode.Episode_details
FROM 
    Program_slot
-- チャンネルテーブルと番組枠テーブルを結合
JOIN 
    Channel ON Program_slot.Channel_ID = Channel.Channel_ID
-- エピソードテーブルと番組枠テーブルを結合
JOIN 
    Episode ON Program_slot.Episode_ID = Episode.Episode_ID
-- シーズンテーブルとエピソードテーブルを結合
JOIN 
    Season ON Episode.Season_ID = Season.Season_ID
-- ドラマチャンネルの番組をフィルタリング
WHERE 
    Channel.Channel_name = 'ドラマ'
-- 本日から一週間分の番組をフィルタリング
AND 
    Program_slot.start_time BETWEEN '2023-09-27' AND DATE_ADD('2023-09-27', INTERVAL 7 DAY)
ORDER BY 
    Program_slot.start_time;
```

＜出力＞

```sql
+---------------------+---------------------+---------------+----------------+--------------+------------------+
| start_time          | ending_time         | Season_Number | Episode_Number | Episode_name | Episode_details  |
+---------------------+---------------------+---------------+----------------+--------------+------------------+
| 2023-10-01 20:00:00 | 2023-10-01 20:24:00 |             1 |              1 | 第1話        | 第1話の詳細      |
| 2023-10-02 20:00:00 | 2023-10-02 20:24:00 |             1 |              2 | 第2話        | 第2話の詳細      |
| 2023-10-03 20:00:00 | 2023-10-03 20:24:00 |             1 |              1 | 第1話        | 第1話の詳細      |
+---------------------+---------------------+---------------+----------------+--------------+------------------+
3 rows in set (0.00 sec)
```

---

### ５問目

(advanced) 直近一週間で最も見られた番組が知りたいです。直近一週間に放送された番組の中で、エピソード視聴数合計トップ2の番組に対して、番組タイトル、視聴数を取得してください
**ここでの本日は、'2023-10-08'とします**

＜入力＞

```sql
-- 直近一週間に放送された番組の中で、エピソード視聴数合計トップ2の番組タイトルと視聴数を取得するクエリ
SELECT 
    Program.Program_name, 
    SUM(View_count.View_count) AS total_views
FROM 
    Program
-- エピソードテーブルと番組テーブルを結合
JOIN 
    Episode ON Program.Program_ID = Episode.Program_ID
-- 番組枠テーブルとエピソードテーブルを結合
JOIN 
    Program_slot ON Episode.Episode_ID = Program_slot.Episode_ID
-- 視聴数テーブルと番組枠テーブルを結合
JOIN 
    View_count ON Program_slot.Program_slot_ID = View_count.Program_slot_ID
-- 直近一週間に放送された番組をフィルタリング
WHERE 
    Program_slot.start_time BETWEEN DATE_SUB('2023-10-08', INTERVAL 7 DAY) AND '2023-10-08'
-- 番組ごとに視聴数を集計
GROUP BY 
    Program.Program_name
-- 視聴数の多い順に並べ替え
ORDER BY 
    total_views DESC
-- 上位2件を取得
LIMIT 2;
```

＜出力＞

```sql
+-----------------+-------------+
| Program_name    | total_views |
+-----------------+-------------+
| 半沢直樹        |        5400 |
| 進撃の巨人      |        4500 |
+-----------------+-------------+
2 rows in set (0.00 sec)
```

---

### ６問目

(advanced) ジャンルごとの番組の視聴数ランキングを知りたいです。番組の視聴数ランキングはエピソードの平均視聴数ランキングとします。ジャンルごとに視聴数トップの番組に対して、ジャンル名、番組タイトル、エピソード平均視聴数を取得してください。

＜入力＞

```sql
-- ジャンルごとの視聴数トップの番組を取得するクエリ
SELECT 
    t1.Genre, 
    t1.Program_name, 
    t1.avg_views
FROM (
    SELECT 
        Program.Genre, 
        Program.Program_name, 
        AVG(View_count.View_count) AS avg_views
    FROM 
        Program
    -- エピソードテーブルと番組テーブルを結合
    JOIN 
        Episode ON Program.Program_ID = Episode.Program_ID
    -- 番組枠テーブルとエピソードテーブルを結合
    JOIN 
        Program_slot ON Episode.Episode_ID = Program_slot.Episode_ID
    -- 視聴数テーブルと番組枠テーブルを結合
    JOIN 
        View_count ON Program_slot.Program_slot_ID = View_count.Program_slot_ID
    -- 番組ごとに視聴数を集計
    GROUP BY 
        Program.Genre, 
        Program.Program_name
) AS t1
JOIN (
    SELECT 
        Genre, 
        MAX(avg_views) AS max_avg_views
    FROM (
        SELECT 
            Program.Genre, 
            AVG(View_count.View_count) AS avg_views
        FROM 
            Program
        -- エピソードテーブルと番組テーブルを結合
        JOIN 
            Episode ON Program.Program_ID = Episode.Program_ID
        -- 番組枠テーブルとエピソードテーブルを結合
        JOIN 
            Program_slot ON Episode.Episode_ID = Program_slot.Episode_ID
        -- 視聴数テーブルと番組枠テーブルを結合
        JOIN 
            View_count ON Program_slot.Program_slot_ID = View_count.Program_slot_ID
        -- 番組ごとに視聴数を集計
        GROUP BY 
            Program.Genre, 
            Program.Program_name
    ) AS subquery
    GROUP BY 
        Genre
) AS t2 ON t1.Genre = t2.Genre AND t1.avg_views = t2.max_avg_views;
```

＜出力＞

```sql
+--------------+--------------------+-----------+
| Genre        | Program_name       | avg_views |
+--------------+--------------------+-----------+
| アニメ       | 名探偵コナン       | 1633.3333 |
| ドラマ       | ドクターX          | 1966.6667 |
| スポーツ     | 野球               | 2150.0000 |
+--------------+--------------------+-----------+
3 rows in set (0.05 sec)
```